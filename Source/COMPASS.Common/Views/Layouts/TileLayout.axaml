<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:COMPASS.Common.ViewModels.Layouts"
             xmlns:model="using:COMPASS.Common.Models"
             xmlns:conv="using:COMPASS.Common.Converters"
             xmlns:preferences="using:COMPASS.Common.Models.Preferences"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="vm:TileLayoutViewModel"
             x:Class="COMPASS.Common.Views.Layouts.TileLayout">

  <ListBox x:Name="TileLayoutListBox"
           Background="Transparent"
            ItemsSource="{Binding MVM.CollectionVM.FilterVM.FilteredCodices}"
            Margin="10,0" SelectionMode="Multiple"
            SelectedItem="{Binding SelectedCodex, Mode=TwoWay}"
            KeyDown="ListBox_KeyDown">
    
    <ListBox.ItemContainerTheme>
      <ControlTheme TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style Selector="^:selected">
          <Setter Property="BorderBrush" Value="{StaticResource AccentColorMuted}"/>
        </Style>
        <!--<Setter Property="ContextMenu" Value="{DynamicResource MultiCodexContextMenu}"/>-->
        <!--<Style.Triggers>
          <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, FallbackValue=1, TargetNullValue=1}" Value="1">
            <Setter Property="ContextMenu" Value="{StaticResource CodexContextMenu}"/>
          </DataTrigger>
        </Style.Triggers>-->
      </ControlTheme>
    </ListBox.ItemContainerTheme>
    <ListBox.ItemsPanel>
      <ItemsPanelTemplate>
        <WrapPanel HorizontalAlignment="Center"/>
      </ItemsPanelTemplate>
    </ListBox.ItemsPanel>
    <ListBox.ItemTemplate>
      <DataTemplate DataType="model:Codex">
        <Grid VerticalAlignment="Top"
              RowDefinitions="Auto, Auto"
              DoubleTapped="Codex_DoubleTapped"
              Background="Transparent"
              Classes="ZoomOnHover">
          <Border CornerRadius="5" Margin="25,15,25,5" Grid.Row="0" x:Name="CoverBorder" BorderThickness="3"
                  BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                  Width="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.TileWidth}"
                  Height="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.TileHeight}">
            <Border.Background>
              <ImageBrush Source="{Binding Thumbnail^, Mode=OneWay}"/>
            </Border.Background>

            <Border.Effect>
              <DropShadowDirectionEffect BlurRadius="15"/>
            </Border.Effect>
          </Border>
          <Panel Grid.Row="1" Margin="0,5"
                Width="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.TileWidth}"
                IsVisible="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.ShowExtraData}">
            <Panel.Styles>
              <Style Selector="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextTrimming" Value="WordEllipsis"/>
                <Setter Property="Height" Value="60"/>
                <Setter Property="IsVisible" Value="False"/>
              </Style>
            </Panel.Styles>
            <TextBlock Text="{Binding Title}"
                       IsVisible="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.DisplayedData, 
                        Converter={x:Static conv:FuncConverters.AreEqual}, 
                        ConverterParameter={x:Static preferences:TileLayoutPreferences+DataOption.Title}}"/>
            <TextBlock Text="{Binding AuthorsAsString}"
                       IsVisible="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.DisplayedData, 
                        Converter={x:Static conv:FuncConverters.AreEqual}, 
                        ConverterParameter={x:Static preferences:TileLayoutPreferences+DataOption.Author}}"/>
            <TextBlock Text="{Binding Publisher}"
                       IsVisible="{Binding $parent[ListBox].((vm:TileLayoutViewModel)DataContext).Preferences.DisplayedData, 
                        Converter={x:Static conv:FuncConverters.AreEqual}, 
                        ConverterParameter={x:Static preferences:TileLayoutPreferences+DataOption.Publisher}}"/>
          <!--<materialDesign:RatingBar Value="{Binding Rating, Mode=TwoWay}" HorizontalAlignment="Center">
              <materialDesign:RatingBar.Style>
                <Style TargetType="materialDesign:RatingBar">
                  <Setter Property="Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.Preferences.DisplayedData, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                 Value="{x:Static preferences:TileLayoutPreferences+DataOption.Rating}">
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </materialDesign:RatingBar.Style>
            </materialDesign:RatingBar>-->
          </Panel>
            
        </Grid>
      </DataTemplate>
    </ListBox.ItemTemplate>
  </ListBox>
</UserControl>
