<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:COMPASS.Common.ViewModels.Modals"
             xmlns:conv="using:COMPASS.Common.Converters"
             xmlns:controls="using:COMPASS.Common.Controls"
             xmlns:view="using:COMPASS.Common.Views"
             xmlns:converters="using:COMPASS.Common.Converters"
             xmlns:dataTemplates="using:COMPASS.Common.DataTemplates"
             xmlns:models="using:COMPASS.Common.Models"
             mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="250"
             x:Class="COMPASS.Common.Views.TagEditBasicView"
             Focusable="True"
             x:DataType="vm:TagEditViewModel">

    <StackPanel Spacing="10">
        <!-- Name -->
        <StackPanel Orientation="Vertical" Spacing="3">
            <TextBlock Text="Name:" />
            <TextBox Text="{Binding TempTag.Name, UpdateSourceTrigger=PropertyChanged}"
                     Loaded="TagNameTextBox_OnLoaded" />
        </StackPanel>

        <!-- Color -->
        <StackPanel Spacing="3">
            <TextBlock Text="Color:" />
            <Button HorizontalAlignment="Stretch"
                    Background="{Binding TempTag.InternalBackgroundColor, Converter={x:Static conv:FuncConverters.ColorToBrush}}">
                <Button.Flyout>
                    <Flyout Placement="Right" HorizontalOffset="10">
                        <StackPanel>
                            <view:ColorPicker Height="135" Width="166"
                                              SelectedColor="{Binding TempTag.InternalBackgroundColor, Mode=TwoWay, TargetNullValue=Black}" />
                            <Button Content="Same as parent" HorizontalAlignment="Center" Margin="0,5"
                                    Command="{Binding ColorSameAsParentCommand}" FontSize="12" />
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
                <Button.Template>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{Binding TempTag.BackgroundColor, Converter={x:Static conv:FuncConverters.ColorToBrush}}"
                                BorderThickness="2" MinWidth="60" MinHeight="15" CornerRadius="5"
                                VerticalAlignment="Center">
                            <TextBlock Text="Same as parent" TextWrapping="Wrap" Margin="15,0"
                                       Background="Transparent"
                                       HorizontalAlignment="Center" FontSize="12" TextAlignment="Center"
                                       IsVisible="{Binding TempTag.InternalBackgroundColor, Converter={x:Static ObjectConverters.IsNull}}" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>

        <!-- Parent -->
        <Grid ColumnDefinitions="Auto, * ,Auto" RowDefinitions="Auto Auto" 
              IsVisible="{Binding !!PossibleParents.Count}">
            <Grid.Resources>
                <Flyout x:Key="TagTreeFlyout" Placement="RightEdgeAlignedTop" HorizontalOffset="20">
                    <TreeView MaxHeight="400" AutoScrollToSelectedItem="True"
                              SelectedItem="{Binding SelectedParent}"
                              BorderBrush="{x:Null}" Background="Transparent"
                              Margin="5" Classes="NoSelection"
                              ItemsSource="{Binding PossibleParents}">
                        <TreeView.ItemTemplate>
                            <dataTemplates:TagTreeDataTemplateSelector>
                                <TreeDataTemplate x:Key="RegularTag" DataType="models:TreeNode"
                                                  ItemsSource="{Binding Children}">
                                    <RadioButton>
                                       <controls:Chip Text="{Binding Tag.Name}" Margin="0,3"
                                                      Background="{Binding Tag.BackgroundColor, Converter={x:Static converters:FuncConverters.ColorToBrush}}"/>
                                    </RadioButton>
                                </TreeDataTemplate>
                                <TreeDataTemplate x:Key="GroupTag" DataType="models:TreeNode"
                                                  ItemsSource="{Binding Children}">
                                    <RadioButton>
                                        <controls:Chip Theme="{StaticResource GroupChip}" Text="{Binding Tag.Name}" 
                                                        HorizontalAlignment="Stretch" Margin="0,3,20,3"
                                                       Background="{Binding Tag.BackgroundColor, Converter={x:Static converters:FuncConverters.ColorToBrush}}"/>
                                    </RadioButton>
                                </TreeDataTemplate>
                            </dataTemplates:TagTreeDataTemplateSelector>
                        </TreeView.ItemTemplate>
                        <TreeView.Styles>
                            <Style Selector="TreeViewItem" x:DataType="models:TreeNode">
                                <Setter Property="IsVisible">
                                    <MultiBinding Converter="{StaticResource AreNotEqualConverter}">
                                        <Binding
                                            Path="$parent[TreeView].((vm:TagEditViewModel)DataContext).TempTag.ID" />
                                        <Binding Path="Tag.ID" />
                                    </MultiBinding>
                                </Setter>

                                <Setter Property="IsExpanded" Value="{Binding Expanded}" />

                                <Style Selector="^:selected > RadioButton">
                                    <Setter Property="IsChecked" Value="True" />
                                </Style>

                                <Style Selector="^ > RadioButton">
                                    <Setter Property="GroupName" Value="ParentGroup" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Style>
                            </Style>
                        </TreeView.Styles>
                    </TreeView>
                </Flyout>
            </Grid.Resources>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Parent:" />
            
            <Button Grid.Row="0" Grid.Column="2" Content="clear" Padding="10,2" Background="Transparent"
                    IsVisible="{Binding TempTag.Parent, Converter={x:Static ObjectConverters.IsNotNull}}"
                    Command="{Binding ClearParentCommand}" />

            <Button Grid.Row="1" Grid.Column="0"
                    Content="none" Flyout="{StaticResource TagTreeFlyout}"
                    IsVisible="{Binding TempTag.Parent, Converter={x:Static ObjectConverters.IsNull}}"
                    Background="Transparent" BorderBrush="{StaticResource Layer7}"
                    Padding="5,0" Margin="5,0" />
            
            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" 
                    Flyout="{StaticResource TagTreeFlyout}"
                    IsVisible="{Binding TempTag.Parent, Converter={x:Static ObjectConverters.IsNotNull}}"
                    Content="{Binding TempTag.Parent}"
                    Classes="BlankButton"
                    Background="{Binding TempTag.Parent.BackgroundColor, Converter={x:Static conv:FuncConverters.ColorToBrush}}">
                <Button.DataTemplates>
                    <dataTemplates:TagDataTemplateSelector>
                        <DataTemplate x:Key="RegularTag" DataType="models:Tag">
                            <controls:Chip Text="{Binding LongName}" Margin="0,3"
                                           Background="{Binding BackgroundColor, Converter={x:Static converters:FuncConverters.ColorToBrush}}"/>
                        </DataTemplate>
                        <DataTemplate x:Key="GroupTag" DataType="models:Tag">
                            <controls:Chip Theme="{StaticResource GroupChip}" Text="{Binding LongName}" 
                                           Background="{Binding BackgroundColor, Converter={x:Static converters:FuncConverters.ColorToBrush}}"/>
                        </DataTemplate>
                    </dataTemplates:TagDataTemplateSelector>
                </Button.DataTemplates>
            </Button>
        </Grid>
    </StackPanel>
</UserControl>