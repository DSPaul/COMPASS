<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    xmlns:materialIcons="using:Material.Icons.Avalonia"
                    xmlns:converters="using:COMPASS.Common.Converters"
                    xmlns:controls="using:COMPASS.Common.Controls">
    <!--Icon Button-->
    <ControlTheme TargetType="controls:IconButton" x:Key="IconOnly">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="20" />
        <Style Selector="^[Background=Transparent] /template/ materialIcons|MaterialIcon">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource TextMutedColor}" />
            <Style Selector="^:pointerover">
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Style>
        </Style>
        <Setter Property="Template">
            <ControlTemplate TargetType="controls:IconButton">
                <Border Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                    <materialIcons:MaterialIcon
                        Kind="{TemplateBinding Icon}"
                        Foreground="{TemplateBinding Foreground}"
                        Height="{x:Static sys:Double.NaN}"
                        Width="{x:Static sys:Double.NaN}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsVisible="{TemplateBinding IsVisible}">
                    </materialIcons:MaterialIcon>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!--Icon Button With text-->
    <ControlTheme TargetType="controls:IconButton" x:Key="{x:Type controls:IconButton}">
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="CornerRadius" Value="7" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!-- <Setter Property="Background" Value="{StaticResource ButtonBackground}" /> -->
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorMuted}"/>
        
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border x:Name="OuterBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="{TemplateBinding CornerRadius}" 
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Margin="{TemplateBinding Margin}" 
                            Padding="{TemplateBinding Padding}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                              Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="ButtonIcon" />
                                <ColumnDefinition Width="*" SharedSizeGroup="ButtonText" />
                            </Grid.ColumnDefinitions>
                            <materialIcons:MaterialIcon Height="20" Width="20" Margin="5,0"
                                                        IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                        Kind="{TemplateBinding Icon}" />
                            <ContentPresenter Grid.Column="1" Margin="5,0"
                                              IsVisible="{TemplateBinding Content, Converter={x:Static ObjectConverters.IsNotNull}}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    
                    <!-- Is default indicator -->
                    <!-- <materialIcons:MaterialIcon Height="10" Margin="3" Kind="KeyboardReturn" -->
                    <!--                             IsHitTestVisible="False" -->
                    <!--                             HorizontalAlignment="Right" VerticalAlignment="Top"> -->
                    <!--     <materialIcons:MaterialIcon.IsVisible> -->
                    <!--         <MultiBinding Converter="{x:Static BoolConverters.And}"> -->
                    <!--             <TemplateBinding Property="IsEffectivelyEnabled"/>  -->
                    <!--             <TemplateBinding Property="IsDefault"/> -->
                    <!--         </MultiBinding> -->
                    <!--     </materialIcons:MaterialIcon.IsVisible> -->
                    <!-- </materialIcons:MaterialIcon> -->
                </Panel>
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^:pointerover /template/ Border#OuterBorder">
            <Setter Property="Background" Value="{StaticResource ButtonHover}"/>
        </Style>
        
        <Style Selector="^.Outline">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2" />
            
            <Style Selector="^ /template/ Border#OuterBorder" >
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>
            
            <Style Selector="^:pointerover /template/ Border#OuterBorder">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{TemplateBinding BorderBrush}"/>
            </Style>
            <Style Selector="^:pressed /template/ Border#OuterBorder">
                <Setter Property="Background" Value="{TemplateBinding BorderBrush}"/>
            </Style>
        </Style>
    </ControlTheme>
    
    <!--CollapsableTabItem-->
    <ControlTheme TargetType="controls:CollapsableTabItem"
                  x:Key="{x:Type controls:CollapsableTabItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Style Selector="^:selected">
            <Setter Property="Background" Value="{StaticResource TabFocus}" />
        </Style>
        <Setter Property="Template">
            <ControlTemplate TargetType="controls:CollapsableTabItem">
                <Border CornerRadius="5,0,0,5" Margin="2,2,0,2"
                        Background="{TemplateBinding Background}"
                        ToolTip.Tip="{TemplateBinding Header}">
                    <Panel>
                        <materialIcons:MaterialIcon Height="35" Width="35" Margin="10"
                                                    HorizontalAlignment="Center"
                                                    Kind="{TemplateBinding Icon}" />

                        <Ellipse
                            Fill="{TemplateBinding AttentionSeverity, Converter={StaticResource SeverityToColorConverter}}"
                            Width="10" Height="10" VerticalAlignment="Top"
                            HorizontalAlignment="Right" Margin="5"
                            IsVisible="{TemplateBinding ShowAttention}" />
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!--Include/Exclude selector-->
    <ControlTheme TargetType="controls:FilterModeSelector"
                  x:Key="{x:Type controls:FilterModeSelector}">
        <Setter Property="Template">
            <ControlTemplate TargetType="controls:FilterModeSelector">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Styles>
                        <Style Selector="RadioButton">
                            <Setter Property="Opacity" Value="0.3" />
                            <Setter Property="Template">
                                <ControlTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </ControlTemplate>
                            </Setter>

                            <Style Selector="^:checked">
                                <Setter Property="Opacity" Value="1" />
                            </Style>

                            <Style Selector="^ > Border">
                                <Setter Property="Padding" Value="10,0" />
                                <Setter Property="Height" Value="30" />
                            </Style>

                            <Style Selector="^ TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                                <Setter Property="Margin" Value="5,2" />
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                        </Style>
                    </StackPanel.Styles>

                    <RadioButton GroupName="IncludeGroup" IsChecked="{TemplateBinding Include, Mode=TwoWay}"
                                 Margin="0">
                        <Border CornerRadius="5,0,0,5" Background="{StaticResource AcceptFill}">
                            <TextBlock Text="Include" />
                        </Border>
                    </RadioButton>

                    <RadioButton GroupName="IncludeGroup" Margin="0">
                        <Border CornerRadius="0,5,5,0" Background="OrangeRed">
                            <TextBlock Text="Exclude" />
                        </Border>
                    </RadioButton>
                </StackPanel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!--RatingControl-->
    <ControlTheme x:Key="{x:Type controls:RatingControl}" TargetType="controls:RatingControl">
        <!--Every TemplatedControl needs to have a ControlTemplate applied. In this setter we define it.-->
        <Setter Property="Template">
            <ControlTemplate>

                <!--We wrap our content inside a DataValidationErrors-control, so error messages are displayed properly-->
                <DataValidationErrors>
                    <DataValidationErrors.Styles>
                        <!--This Style is for a Path which has the Class "star" applied.-->
                        <Style Selector="Path.star">
                            <Setter Property="Data"
                                    Value="M 3.9687501,0 5.1351364,2.3633569 7.7432556,2.7423389 5.8560028,4.5819556 6.3015226,7.1795363 3.96875,5.953125 1.6359772,7.1795361 2.0814972,4.5819556 0.19424448,2.7423387 2.8023636,2.3633569 Z" />
                            <Setter Property="Width" Value="20" />
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Fill" Value="{StaticResource RatingControlUnselectedBrush}" />
                            <Setter Property="Stretch" Value="Uniform" />
                        </Style>

                        <Style Selector="Path.selected">
                            <Setter Property="Fill" Value="{StaticResource RatingControlSelectedBrush}" />
                        </Style>

                        <Style Selector="Path.star:pointerover">
                            <Setter Property="RenderTransform" Value="scale(1.1)" />
                        </Style>

                    </DataValidationErrors.Styles>
                    <!--This is our stars-presenter. Make sure to set the name, so the control can be found.-->
                    <ItemsControl x:Name="PART_StarsPresenter"
                                  ItemsSource="{TemplateBinding Stars}">
                        <!--We want to have the stars drawn horizontally. Therefore we change the ItemsPanel accordingly-->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="5" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <!--Items is an array if integer. Let's add a Path as the DataTemplate-->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Path Classes="star">
                                    <!--We enable or disable classes through a boolean value. We use our IsSmallerOrEqualConverter to do so. -->
                                    <Classes.selected>
                                        <MultiBinding Converter="{StaticResource IsSmallerOrEqualConverter}">
                                            <!--This is our dataContext, so the number of this item-->
                                            <Binding />
                                            <!--This is the binding to the RatingControls current value-->
                                            <Binding
                                                RelativeSource="{RelativeSource AncestorType=controls:RatingControl}"
                                                Path="Value" />
                                        </MultiBinding>
                                    </Classes.selected>
                                </Path>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type controls:Explainer}" TargetType="controls:Explainer">
        <Setter Property="Template">
            <ControlTemplate>
                <materialIcons:MaterialIcon Kind="{TemplateBinding Icon}" ToolTip.ShowDelay="0"
                                            ToolTip.Tip="{TemplateBinding Content}" />
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type controls:Chip}" TargetType="controls:Chip">
        <Setter Property="Template">
            <ControlTemplate>
                <Border CornerRadius="5" Background="{TemplateBinding Background}" HorizontalAlignment="Left">
                    <TextBlock Text="{TemplateBinding Text}" Margin="7,0" FontSize="14" />
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="GroupChip" TargetType="controls:Chip">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel Orientation="Vertical" Background="Transparent"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                    <TextBlock
                        Text="{TemplateBinding Text, Converter={x:Static converters:FuncConverters.ToUpperConverter}}"
                        Foreground="{StaticResource TextMutedColor}"
                        FontSize="15" FontWeight="Bold" />
                    <Rectangle
                        Fill="{TemplateBinding Background}"
                        Height="2" HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom" />
                </StackPanel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="10">
                <controls:FilterModeSelector/>
                
                <StackPanel Orientation="Horizontal">
                    <controls:IconButton Icon="About" Theme="{StaticResource IconOnly}" />
                    <controls:IconButton Icon="Search" IsDefault="True" 
                                         Theme="{StaticResource IconOnly}" />
                </StackPanel>
                <controls:IconButton Icon="About" Content="About" Background="DimGray"/>
                <controls:IconButton Icon="Achievement" Content="Outlined button" Classes="Outline" />
                <controls:IconButton Content="Icon btn without icon" />
                <TabControl Background="{StaticResource ButtonBackground}" TabStripPlacement="Left">
                    <controls:CollapsableTabItem Header="Tags" Icon="Tags">
                        tags context
                    </controls:CollapsableTabItem>
                    <controls:CollapsableTabItem Header="Filters" Icon="Filter">
                        filter content
                    </controls:CollapsableTabItem>
                </TabControl>

                <TabControl Background="{StaticResource ButtonBackground}" TabStripPlacement="Top">
                    <controls:CollapsableTabItem Header="Tags" Icon="Tags">
                        tags context
                    </controls:CollapsableTabItem>
                    <controls:CollapsableTabItem Header="Filters" Icon="Filter">
                        filter content
                    </controls:CollapsableTabItem>
                </TabControl>

                <controls:RatingControl Value="0" NumberOfStars="5" />
                <controls:RatingControl Value="2" NumberOfStars="5" />
                <controls:RatingControl Value="6" NumberOfStars="6" />

                <controls:Chip Text="This is a chip" Background="Green" />
                <controls:Chip Theme="{StaticResource GroupChip}" Text="This is a chip" Background="Green" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>
</ResourceDictionary>