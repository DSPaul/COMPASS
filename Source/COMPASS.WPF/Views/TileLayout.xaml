<UserControl x:Class="COMPASS.Views.TileLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:converters="clr-namespace:COMPASS.Converters"
             xmlns:preferences="clr-namespace:COMPASS.Models.Preferences"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vwp="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:layouts="clr-namespace:COMPASS.ViewModels.Layouts"
             d:DataContext="{d:DesignInstance Type=layouts:TileLayoutViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:UriToBitmapConverter x:Key="UriToBitmapConverter" />
    </UserControl.Resources>

    <ListView x:Name="TileLayoutListBox" FocusVisualStyle="{x:Null}" 
            ItemsSource="{Binding MVM.CollectionVM.FilterVM.FilteredCodices}"  
            Background="{x:Null}" BorderBrush="{x:Null}" VerticalContentAlignment="Top" 
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="10,0" SelectionMode="Extended"
            SelectedItem="{Binding SelectedCodex, Mode=TwoWay}"
            PreviewKeyDown="TileLayoutListBox_PreviewKeyDown"
            dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding CodexVM}"
            VirtualizingPanel.IsVirtualizing="{Binding DoVirtualization}"
            VirtualizingPanel.IsVirtualizingWhenGrouping="{Binding DoVirtualization}"
            VirtualizingPanel.CacheLengthUnit="Item" VirtualizingPanel.CacheLength="20"
            VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel">
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListBoxItem}">
                <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ContextMenu" Value="{DynamicResource MultiCodexContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource AccentColorMuted}"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, FallbackValue=1, TargetNullValue=1}" Value="1">
                        <Setter Property="ContextMenu" Value="{StaticResource CodexContextMenu}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemsPanel>
            <ItemsPanelTemplate>
                <vwp:VirtualizingWrapPanel AllowDifferentSizedItems="False" Orientation="Horizontal" SpacingMode="Uniform"/>
            </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListView.ItemTemplate>
            <DataTemplate>
                <Grid VerticalAlignment="Top" Margin="0,10" RenderTransformOrigin="0.5,0.5"
                      Background="Transparent">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- selection border-->
                    <Border CornerRadius="7" Margin="10,5" Grid.Row="0" BorderThickness="3" SnapsToDevicePixels="True"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                            Width="{Binding DataContext.Preferences.TileWidth, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            Height="{Binding DataContext.Preferences.TileHeight, RelativeSource={RelativeSource AncestorType=UserControl}}">
                        <!-- nested border to clip rounded corners from image-->
                        <Border CornerRadius="5">
                            <Border.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border 
                                            Background="Black"
                                            SnapsToDevicePixels="True"
                                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                            Width="{Binding ActualWidth, ElementName=thumbnail}"
                                            Height="{Binding ActualHeight, ElementName=thumbnail}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.OpacityMask>
                            <Image Stretch="UniformToFill" HorizontalAlignment="Center" x:Name="thumbnail" SnapsToDevicePixels="True"
                                   Source="{Binding Thumbnail, IsAsync=True ,Converter={StaticResource UriToBitmapConverter}, Mode=OneWay, 
                                                    FallbackValue=Media\\CoverPlaceholder.png, TargetNullValue=Media\\CoverPlaceholder.png}"
                                   ImageFailed="Thumbnail_ImageFailed"/>
                        </Border>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Direction="300"/>
                        </Border.Effect>
                    </Border>
                    
                    <Grid Grid.Row="1" Margin="0,5" 
                          Width="{Binding DataContext.Preferences.TileWidth, RelativeSource={RelativeSource AncestorType=UserControl}}"
                          Visibility="{Binding DataContext.Preferences.ShowExtraData, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource ToVisibilityConverter}}">
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Style>
                        </Grid.Resources>
                        <TextBlock Text="{Binding Title}" TextTrimming="WordEllipsis" Height="60">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Preferences.DisplayedData, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                     Value="{x:Static preferences:TileLayoutPreferences+DataOption.Title}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding AuthorsAsString}" TextTrimming="WordEllipsis" Height="60">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Preferences.DisplayedData, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                     Value="{x:Static preferences:TileLayoutPreferences+DataOption.Author}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Publisher}" TextTrimming="WordEllipsis" Height="60">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Preferences.DisplayedData, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                     Value="{x:Static preferences:TileLayoutPreferences+DataOption.Publisher}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <materialDesign:RatingBar Value="{Binding Rating, Mode=TwoWay}" HorizontalAlignment="Center">
                            <materialDesign:RatingBar.Style>
                                <Style TargetType="materialDesign:RatingBar">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Preferences.DisplayedData, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                     Value="{x:Static preferences:TileLayoutPreferences+DataOption.Rating}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:RatingBar.Style>
                        </materialDesign:RatingBar>
                    </Grid>
                </Grid>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</UserControl>
